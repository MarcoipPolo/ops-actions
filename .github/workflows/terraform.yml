on:
  workflow_call:
    inputs:
      runs-on:
        description: The type of machine to run the job on
        required: false
        type: string
        default: ubuntu-latest

      environment:
        description: The environment that the job references
        required: true
        type: string

      working_directory:
        description: The working directory of where to run the Terraform CLI commands
        required: true
        type: string

      arm_client_id:
        description: Azure Resource Manager service principal client ID
        required: true
        type: string

      arm_subscription_id:
        description: Azure Resource Manager subscription ID
        required: true
        type: string

      arm_tenant_id:
        description: Azure Resource Manager tenant ID
        required: true
        type: string

      terraform_version:
        description: The version of Terraform CLI to install
        required: false
        type: string
        default: latest

    secrets:
      arm_client_secret:
        description: Azure Resource Manager service principal client secret
        required: true

jobs:
  terraform:
    name: Terraform
    runs-on: ${{ inputs.runs-on }}
    environment: ${{ inputs.environment }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }} # Terraform root module

    env:
      ARM_CLIENT_ID: ${{ inputs.arm_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.arm_client_secret }}
      ARM_SUBSCRIPTION_ID: ${{ inputs.arm_subscription_id }}
      ARM_TENANT_ID: ${{ inputs.arm_tenant_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      # Apply infrastructure on merge into branch 'main'
      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
